version: '3.8'
services:
  web:
    build: .  # 指示 Docker Compose 在当前目录下查找 Dockerfile 并构建 web 服务的镜像
    ports:
      - "8090:8080"  # 将容器内的 8080 端口映射到宿主机的 8090 端口
    depends_on:
      - db
      - cache  # 确保在 web 服务启动前 db 和 cache 服务已经在运行
    environment:
      DB_HOST: db  # 环境变量，供应用程序连接到数据库和缓存服务
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: mydatabase
      REDIS_URL: cache:6379  # 指向 Redis 服务的 URL

  db:
    image: postgres:latest  # 使用最新版本的 PostgreSQL 官方镜像
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase  # 初始化数据库的环境变量
    ports:
      - "5432:5432"  # 将容器的 5432 端口映射到宿主机的 5432 端口
    volumes:
      - pgdata:/var/lib/postgresql/data  # 持久化 PostgreSQL 数据

  cache:
    image: redis:latest  # 使用最新版本的 Redis 官方镜像
    ports:
      - "6379:6379"  # 将容器的 6379 端口映射到宿主机的 6379 端口

volumes:
  pgdata:  # 定义一个名为 pgdata 的卷，用于 PostgreSQL 数据的持久化
